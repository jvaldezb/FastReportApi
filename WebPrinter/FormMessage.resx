<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Er+5WjDuyHMAAAAASUVORK5CYII=
</value>
  </data>
</root>